[0.000000] (-) TimerEvent: {}
[0.000342] (sensor) JobQueued: {'identifier': 'sensor', 'dependencies': OrderedDict()}
[0.000466] (sensor) JobStarted: {'identifier': 'sensor'}
[0.018377] (sensor) JobProgress: {'identifier': 'sensor', 'progress': 'cmake'}
[0.018831] (sensor) JobProgress: {'identifier': 'sensor', 'progress': 'build'}
[0.019256] (sensor) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/build/sensor', '--', '-j12', '-l12'], 'cwd': '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/build/sensor', 'env': OrderedDict([('KDE_FULL_SESSION', 'true'), ('LC_TIME', 'be_BY.UTF-8'), ('PAM_KWALLET5_LOGIN', '/run/user/1000/kwallet5.socket'), ('USER', 'borisfor317'), ('XDG_SEAT', 'seat0'), ('SSH_AGENT_PID', '1271'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('KONSOLE_VERSION', '191203'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/borisfor317'), ('OLDPWD', '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros'), ('LESS', '-R'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('DESKTOP_SESSION', 'plasma'), ('TERM_PROGRAM_VERSION', '1.72.2'), ('ZSH', '/home/borisfor317/.oh-my-zsh'), ('LSCOLORS', 'Gxfxcxdxbxegedabagacad'), ('PYENV_SHELL', 'zsh'), ('KDE_SESSION_VERSION', '5'), ('SHELL_SESSION_ID', '1e75f89fce53464b94d90708bb0081d8'), ('XDG_SEAT_PATH', '/org/freedesktop/DisplayManager/Seat0'), ('PAGER', 'less'), ('VSCODE_GIT_ASKPASS_MAIN', '/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('ROS_PYTHON_VERSION', '3'), ('KONSOLE_DBUS_SESSION', '/Sessions/1'), ('LC_MONETARY', 'be_BY.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/usr/share/code/code'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('KDED_STARTED_BY_KDEINIT', '1'), ('COLORTERM', 'truecolor'), ('KONSOLE_DBUS_WINDOW', '/Windows/1'), ('ROS_DISTRO', 'foxy'), ('COLCON_PREFIX_PATH', '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/install'), ('LOGNAME', 'borisfor317'), ('QT_AUTO_SCREEN_SCALE_FACTOR', '0'), ('WINDOWID', '62914567'), ('_', '/usr/local/bin/colcon'), ('COLORFGBG', '0;15'), ('XDG_SESSION_CLASS', 'user'), ('USER_ZDOTDIR', '/home/borisfor317'), ('ROS_VERSION', '2'), ('TERM', 'xterm-256color'), ('XDG_SESSION_ID', '3'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/foxy/bin:/home/borisfor317/.pyenv/shims:/home/borisfor317/.pyenv/bin:/home/borisfor317/.cargo/bin:/home/borisfor317/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('PAPERSIZE', 'a4'), ('LC_ADDRESS', 'C.UTF-8'), ('XCURSOR_THEME', 'Sweet-cursors'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('XDG_SESSION_PATH', '/org/freedesktop/DisplayManager/Session1'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':0'), ('LANG', 'C.UTF-8'), ('LC_TELEPHONE', 'C.UTF-8'), ('XDG_CURRENT_DESKTOP', 'KDE'), ('VSCODE_INJECTION', '1'), ('XAUTHORITY', '/tmp/xauth-1000-_0'), ('XDG_SESSION_DESKTOP', 'KDE'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('TERM_PROGRAM', 'vscode'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-eafa020af9.sock'), ('SSH_AUTH_SOCK', '/tmp/ssh-MJxDnqQvSEVl/agent.1227'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'KDE'), ('AMENT_PREFIX_PATH', '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/install/sensor:/opt/ros/foxy'), ('LC_NAME', 'C.UTF-8'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('KONSOLE_DBUS_SERVICE', ':1.144'), ('LC_MEASUREMENT', 'C'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'C.UTF-8'), ('XDG_VTNR', '1'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('PWD', '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/build/sensor'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-plasma:/etc/xdg:/usr/share/kubuntu-default-settings/kf5-settings'), ('XDG_DATA_DIRS', '/usr/share/plasma:/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('PYENV_ROOT', '/home/borisfor317/.pyenv'), ('ZDOTDIR', '/home/borisfor317'), ('LC_NUMERIC', 'C.UTF-8'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('KDE_SESSION_UID', '1000'), ('LC_PAPER', 'C.UTF-8'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/install/sensor:/opt/ros/foxy')]), 'shell': False}
[0.046594] (sensor) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target mock\x1b[0m\n'}
[0.046764] (sensor) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target client\x1b[0m\n'}
[0.063305] (sensor) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/mock.dir/src/mock.cpp.o\x1b[0m\n'}
[0.063448] (sensor) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/client.dir/src/client.cpp.o\x1b[0m\n'}
[0.099888] (-) TimerEvent: {}
[0.200170] (-) TimerEvent: {}
[0.300427] (-) TimerEvent: {}
[0.400683] (-) TimerEvent: {}
[0.500951] (-) TimerEvent: {}
[0.601202] (-) TimerEvent: {}
[0.701475] (-) TimerEvent: {}
[0.801730] (-) TimerEvent: {}
[0.868131] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:30:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected class-name before \xe2\x80\x98\x1b[01m\x1b[K{\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[0.868318] (sensor) StderrLine: {'line': b'   30 | class SensorRosReader : public rclcpp::Node, public ISensor \x1b[01;31m\x1b[K{\x1b[m\x1b[K\n'}
[0.868400] (sensor) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[0.868474] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:32:50:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids declaration of \xe2\x80\x98\x1b[01m\x1b[KSensorSubscriber\x1b[m\x1b[K\xe2\x80\x99 with no type [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[0.868520] (sensor) StderrLine: {'line': b'   32 |   explicit SensorSubscriber(std::string node_name\x1b[01;31m\x1b[K)\x1b[m\x1b[K : Node(node_name) {\n'}
[0.868566] (sensor) StderrLine: {'line': b'      |                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[0.868610] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:32:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Konly declarations of constructors and conversion operators can be \xe2\x80\x98\x1b[01m\x1b[Kexplicit\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.868653] (sensor) StderrLine: {'line': b'   32 |   \x1b[01;31m\x1b[Kexplicit\x1b[m\x1b[K SensorSubscriber(std::string node_name) : Node(node_name) {\n'}
[0.868702] (sensor) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[0.868745] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:41:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kneed \xe2\x80\x98\x1b[01m\x1b[Ktypename\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<TMessage>::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 because \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<TMessage>\x1b[m\x1b[K\xe2\x80\x99 is a dependent scope\n'}
[0.868792] (sensor) StderrLine: {'line': b'   41 |   \x1b[01;31m\x1b[Krclcpp\x1b[m\x1b[K::Subscription<TMessage>::SharedPtr subscription_;\n'}
[0.868835] (sensor) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.868887] (sensor) StderrLine: {'line': b'      |   \x1b[32m\x1b[Ktypename \x1b[m\x1b[K\n'}
[0.868931] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint SensorRosReader<TMessage>::SensorSubscriber(std::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.868976] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:32:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Konly constructors take member initializers\n'}
[0.869019] (sensor) StderrLine: {'line': b'   32 |   explicit SensorSubscriber(std::string node_name) : \x1b[01;31m\x1b[KNode\x1b[m\x1b[K(node_name) {\n'}
[0.869062] (sensor) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[0.870121] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:33:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksubscription_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Krcl_subscription_t\x1b[m\x1b[K\xe2\x80\x99?\n'}
[0.870296] (sensor) StderrLine: {'line': b'   33 |     \x1b[01;31m\x1b[Ksubscription_\x1b[m\x1b[K = create_subscription<TMessage>(\n'}
[0.870347] (sensor) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.870393] (sensor) StderrLine: {'line': b'      |     \x1b[32m\x1b[Krcl_subscription_t\x1b[m\x1b[K\n'}
[0.870437] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:35:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[0.870482] (sensor) StderrLine: {'line': b'   35 |         std::bind(&SensorRosReader::reading_callback, this, _1)\x1b[01;31m\x1b[K;\x1b[m\x1b[K);\n'}
[0.870526] (sensor) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[0.870569] (sensor) StderrLine: {'line': b'      |                                                                \x1b[32m\x1b[K)\x1b[m\x1b[K\n'}
[0.870612] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:33:50:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kto match this \xe2\x80\x98\x1b[01m\x1b[K(\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.870657] (sensor) StderrLine: {'line': b'   33 |     subscription_ = create_subscription<TMessage>\x1b[01;36m\x1b[K(\x1b[m\x1b[K\n'}
[0.870700] (sensor) StderrLine: {'line': b'      |                                                  \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[0.870748] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:35:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[0.870799] (sensor) StderrLine: {'line': b'   35 |         std::bind(&SensorRosReader::reading_callback, this, _1);\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[0.870842] (sensor) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[0.870885] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:36:3:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kno return statement in function returning non-void [\x1b[01;35m\x1b[K-Wreturn-type\x1b[m\x1b[K]\n'}
[0.870933] (sensor) StderrLine: {'line': b'   36 |   \x1b[01;35m\x1b[K}\x1b[m\x1b[K\n'}
[0.870976] (sensor) StderrLine: {'line': b'      |   \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[0.872175] (sensor) StderrLine: {'line': b'/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.872267] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/type_traits:1313:45:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _From1, class _To1, class> static std::true_type std::__is_convertible_helper<SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >*, rclcpp::Node*, false>::__test<_From1, _To1, <template-parameter-1-3> >(int) [with _From1 = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >*; _To1 = rclcpp::Node*; <template-parameter-1-3> = <missing>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.872324] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/type_traits:1322:42:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::__is_convertible_helper<SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >*, rclcpp::Node*, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.872374] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/type_traits:1328:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::is_convertible<SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >*, rclcpp::Node*>\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.872418] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:927:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::__sp_compatible_with<SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >*, rclcpp::Node*>\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.872462] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1094:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, __gnu_cxx::_Lock_policy _Lp> template<class _Yp, class _Res> using _Compatible = typename std::enable_if<std::__sp_compatible_with<_Yp*, _Tp*>::value, _Res>::type [with _Yp = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >; _Res = void; _Tp = rclcpp::Node; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.872507] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1171:30:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::__shared_ptr<rclcpp::Node, __gnu_cxx::_S_atomic>::__shared_ptr(const std::__shared_ptr<_Tp>&) [with _Yp = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >; <template-parameter-1-2> = <missing>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.872550] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/type_traits:883:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::is_constructible<std::__shared_ptr<rclcpp::Node, __gnu_cxx::_S_atomic>, const std::shared_ptr<SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.872594] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:106:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class ... _Args> using _Constructible = typename std::enable_if<std::is_constructible<std::__shared_ptr<_Tp>, _Args ...>::value>::type [with _Args = {const std::shared_ptr<SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > > >&}; _Tp = rclcpp::Node]\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.872643] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:245:9:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class> std::shared_ptr<rclcpp::Node>::shared_ptr(const std::shared_ptr<_Tp>&) [with _Yp = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >; <template-parameter-1-2> = <missing>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.872688] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:52:76:\x1b[m\x1b[K   required from here\n'}
[0.872733] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:38:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KTMessage SensorRosReader<TMessage>::read() [with TMessage = sensor_msgs::msg::Temperature_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99 marked \xe2\x80\x98\x1b[01m\x1b[Koverride\x1b[m\x1b[K\xe2\x80\x99, but does not override\n'}
[0.872778] (sensor) StderrLine: {'line': b'   38 |   TMessage \x1b[01;31m\x1b[Kread\x1b[m\x1b[K() override { return latest_; }\n'}
[0.872821] (sensor) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[0.901811] (-) TimerEvent: {}
[1.002026] (-) TimerEvent: {}
[1.062393] (sensor) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[1.062546] (sensor) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[1.062609] (sensor) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/memory:63\x1b[m\x1b[K,\n'}
[1.062667] (sensor) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:1\x1b[m\x1b[K:\n'}
[1.062733] (sensor) StderrLine: {'line': b'/usr/include/c++/9/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >; _Args = {const char (&)[19]}; _Tp = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.062815] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:483:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >; _Args = {const char (&)[19]}; _Tp = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.062896] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:548:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const char (&)[19]}; _Tp = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >; _Alloc = std::allocator<SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.062942] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:679:16:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >; _Alloc = std::allocator<SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > > >; _Args = {const char (&)[19]}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.062990] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1344:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > > >; _Args = {const char (&)[19]}; _Tp = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.063036] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:359:59:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > > >; _Args = {const char (&)[19]}; _Tp = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.063083] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:701:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >; _Alloc = std::allocator<SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > > >; _Args = {const char (&)[19]}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.063128] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:717:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >; _Args = {const char (&)[19]}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.063175] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:52:75:\x1b[m\x1b[K   required from here\n'}
[1.063220] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:146:4:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KSensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >::SensorRosReader(const char [19])\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.063264] (sensor) StderrLine: {'line': b'  146 |  { \x1b[01;31m\x1b[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)\x1b[m\x1b[K; }\n'}
[1.063306] (sensor) StderrLine: {'line': b'      |    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.063348] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:30:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KSensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >::SensorRosReader()\x1b[m\x1b[K\xe2\x80\x99 <deleted>\n'}
[1.063395] (sensor) StderrLine: {'line': b'   30 | class \x1b[01;36m\x1b[KSensorRosReader\x1b[m\x1b[K : public rclcpp::Node, public ISensor {\n'}
[1.063437] (sensor) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.063483] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:30:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[1.063528] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:30:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KSensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >::SensorRosReader(const SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99 <deleted>\n'}
[1.063575] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:30:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst char [19]\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.063619] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:30:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KSensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >::SensorRosReader(SensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >&&)\x1b[m\x1b[K\xe2\x80\x99 <deleted>\n'}
[1.063663] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/client.cpp:30:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst char [19]\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KSensorRosReader<sensor_msgs::msg::Temperature_<std::allocator<void> > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.096209] (sensor) StderrLine: {'line': b'make[2]: *** [CMakeFiles/client.dir/build.make:63: CMakeFiles/client.dir/src/client.cpp.o] Error 1\n'}
[1.096359] (sensor) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:107: CMakeFiles/client.dir/all] Error 2\n'}
[1.096415] (sensor) StderrLine: {'line': b'make[1]: *** Waiting for unfinished jobs....\n'}
[1.102094] (-) TimerEvent: {}
[1.202303] (-) TimerEvent: {}
[1.302512] (-) TimerEvent: {}
[1.402752] (-) TimerEvent: {}
[1.502992] (-) TimerEvent: {}
[1.603230] (-) TimerEvent: {}
[1.703442] (-) TimerEvent: {}
[1.803646] (-) TimerEvent: {}
[1.903879] (-) TimerEvent: {}
[1.994963] (sensor) StdoutLine: {'line': b'[ 75%] \x1b[32m\x1b[1mLinking CXX executable mock\x1b[0m\n'}
[2.003993] (-) TimerEvent: {}
[2.093149] (sensor) StdoutLine: {'line': b'[ 75%] Built target mock\n'}
[2.093888] (sensor) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[2.095010] (sensor) CommandEnded: {'returncode': 2}
[2.104088] (-) TimerEvent: {}
[2.134255] (sensor) JobEnded: {'identifier': 'sensor', 'rc': 2}
[2.144764] (-) EventReactorShutdown: {}
