[0.000000] (-) TimerEvent: {}
[0.000212] (sensor) JobQueued: {'identifier': 'sensor', 'dependencies': OrderedDict()}
[0.000432] (sensor) JobStarted: {'identifier': 'sensor'}
[0.021067] (sensor) JobProgress: {'identifier': 'sensor', 'progress': 'cmake'}
[0.021545] (sensor) JobProgress: {'identifier': 'sensor', 'progress': 'build'}
[0.021969] (sensor) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/build/sensor', '--', '-j12', '-l12'], 'cwd': '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/build/sensor', 'env': OrderedDict([('KDE_FULL_SESSION', 'true'), ('LC_TIME', 'be_BY.UTF-8'), ('PAM_KWALLET5_LOGIN', '/run/user/1000/kwallet5.socket'), ('USER', 'borisfor317'), ('XDG_SEAT', 'seat0'), ('SSH_AGENT_PID', '1271'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('KONSOLE_VERSION', '191203'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/borisfor317'), ('OLDPWD', '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros'), ('LESS', '-R'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('DESKTOP_SESSION', 'plasma'), ('TERM_PROGRAM_VERSION', '1.72.2'), ('ZSH', '/home/borisfor317/.oh-my-zsh'), ('LSCOLORS', 'Gxfxcxdxbxegedabagacad'), ('PYENV_SHELL', 'zsh'), ('KDE_SESSION_VERSION', '5'), ('SHELL_SESSION_ID', '1e75f89fce53464b94d90708bb0081d8'), ('XDG_SEAT_PATH', '/org/freedesktop/DisplayManager/Seat0'), ('PAGER', 'less'), ('VSCODE_GIT_ASKPASS_MAIN', '/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('ROS_PYTHON_VERSION', '3'), ('KONSOLE_DBUS_SESSION', '/Sessions/1'), ('LC_MONETARY', 'be_BY.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/usr/share/code/code'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('KDED_STARTED_BY_KDEINIT', '1'), ('COLORTERM', 'truecolor'), ('KONSOLE_DBUS_WINDOW', '/Windows/1'), ('ROS_DISTRO', 'foxy'), ('COLCON_PREFIX_PATH', '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/install'), ('LOGNAME', 'borisfor317'), ('QT_AUTO_SCREEN_SCALE_FACTOR', '0'), ('WINDOWID', '62914567'), ('_', '/usr/local/bin/colcon'), ('COLORFGBG', '0;15'), ('XDG_SESSION_CLASS', 'user'), ('USER_ZDOTDIR', '/home/borisfor317'), ('ROS_VERSION', '2'), ('TERM', 'xterm-256color'), ('XDG_SESSION_ID', '3'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/foxy/bin:/home/borisfor317/.pyenv/shims:/home/borisfor317/.pyenv/bin:/home/borisfor317/.cargo/bin:/home/borisfor317/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('PAPERSIZE', 'a4'), ('LC_ADDRESS', 'C.UTF-8'), ('XCURSOR_THEME', 'Sweet-cursors'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('XDG_SESSION_PATH', '/org/freedesktop/DisplayManager/Session1'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':0'), ('LANG', 'C.UTF-8'), ('LC_TELEPHONE', 'C.UTF-8'), ('XDG_CURRENT_DESKTOP', 'KDE'), ('VSCODE_INJECTION', '1'), ('XAUTHORITY', '/tmp/xauth-1000-_0'), ('XDG_SESSION_DESKTOP', 'KDE'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('TERM_PROGRAM', 'vscode'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-eafa020af9.sock'), ('SSH_AUTH_SOCK', '/tmp/ssh-MJxDnqQvSEVl/agent.1227'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'KDE'), ('AMENT_PREFIX_PATH', '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/install/sensor:/opt/ros/foxy'), ('LC_NAME', 'C.UTF-8'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('KONSOLE_DBUS_SERVICE', ':1.144'), ('LC_MEASUREMENT', 'C'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'C.UTF-8'), ('XDG_VTNR', '1'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('PWD', '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/build/sensor'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-plasma:/etc/xdg:/usr/share/kubuntu-default-settings/kf5-settings'), ('XDG_DATA_DIRS', '/usr/share/plasma:/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('PYENV_ROOT', '/home/borisfor317/.pyenv'), ('ZDOTDIR', '/home/borisfor317'), ('LC_NUMERIC', 'C.UTF-8'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('KDE_SESSION_UID', '1000'), ('LC_PAPER', 'C.UTF-8'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/install/sensor:/opt/ros/foxy')]), 'shell': False}
[0.048678] (sensor) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target mock\x1b[0m\n'}
[0.064124] (sensor) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/mock.dir/src/mock.cpp.o\x1b[0m\n'}
[0.099829] (-) TimerEvent: {}
[0.200042] (-) TimerEvent: {}
[0.300250] (-) TimerEvent: {}
[0.400471] (-) TimerEvent: {}
[0.500683] (-) TimerEvent: {}
[0.600916] (-) TimerEvent: {}
[0.701159] (-) TimerEvent: {}
[0.801384] (-) TimerEvent: {}
[0.856991] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/mock.cpp:23:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected class-name before \xe2\x80\x98\x1b[01m\x1b[K{\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[0.857140] (sensor) StderrLine: {'line': b'   23 | class ConstantSensor : public ISensor \x1b[01;31m\x1b[K{\x1b[m\x1b[K\n'}
[0.857190] (sensor) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[0.862219] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/mock.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KTemperaturePublisher::TemperaturePublisher(ISensor<sensor_msgs::msg::Temperature_<std::allocator<void> > >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.862374] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/mock.cpp:38:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KTemperature\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.862451] (sensor) StderrLine: {'line': b'   38 |     publisher_ = this->create_publisher<sensor_msgs::msg::Temperature>(\x1b[01;31m\x1b[KTemperature\x1b[m\x1b[K::TopicName, 10);\n'}
[0.862524] (sensor) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.901491] (-) TimerEvent: {}
[1.001759] (-) TimerEvent: {}
[1.102024] (-) TimerEvent: {}
[1.114493] (sensor) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[1.114681] (sensor) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[1.114897] (sensor) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/string:41\x1b[m\x1b[K,\n'}
[1.114954] (sensor) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/stdexcept:39\x1b[m\x1b[K,\n'}
[1.115019] (sensor) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/array:39\x1b[m\x1b[K,\n'}
[1.115073] (sensor) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/tuple:39\x1b[m\x1b[K,\n'}
[1.115116] (sensor) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/functional:54\x1b[m\x1b[K,\n'}
[1.115177] (sensor) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/mock.cpp:2\x1b[m\x1b[K:\n'}
[1.115246] (sensor) StderrLine: {'line': b'/usr/include/c++/9/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = TemperaturePublisher; _Args = {std::shared_ptr<ConstantSensor<sensor_msgs::msg::Temperature_<std::allocator<void> > > >&}; _Tp = TemperaturePublisher]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.115321] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:483:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = TemperaturePublisher; _Args = {std::shared_ptr<ConstantSensor<sensor_msgs::msg::Temperature_<std::allocator<void> > > >&}; _Tp = TemperaturePublisher; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<TemperaturePublisher>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.115373] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:548:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {std::shared_ptr<ConstantSensor<sensor_msgs::msg::Temperature_<std::allocator<void> > > >&}; _Tp = TemperaturePublisher; _Alloc = std::allocator<TemperaturePublisher>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.115419] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:679:16:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = TemperaturePublisher; _Alloc = std::allocator<TemperaturePublisher>; _Args = {std::shared_ptr<ConstantSensor<sensor_msgs::msg::Temperature_<std::allocator<void> > > >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.115465] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1344:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<TemperaturePublisher>; _Args = {std::shared_ptr<ConstantSensor<sensor_msgs::msg::Temperature_<std::allocator<void> > > >&}; _Tp = TemperaturePublisher; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.115517] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:359:59:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<TemperaturePublisher>; _Args = {std::shared_ptr<ConstantSensor<sensor_msgs::msg::Temperature_<std::allocator<void> > > >&}; _Tp = TemperaturePublisher]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.115567] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:701:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = TemperaturePublisher; _Alloc = std::allocator<TemperaturePublisher>; _Args = {std::shared_ptr<ConstantSensor<sensor_msgs::msg::Temperature_<std::allocator<void> > > >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.115637] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:717:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = TemperaturePublisher; _Args = {std::shared_ptr<ConstantSensor<sensor_msgs::msg::Temperature_<std::allocator<void> > > >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.115690] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/mock.cpp:58:64:\x1b[m\x1b[K   required from here\n'}
[1.115736] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:146:4:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KTemperaturePublisher::TemperaturePublisher(std::shared_ptr<ConstantSensor<sensor_msgs::msg::Temperature_<std::allocator<void> > > >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.115783] (sensor) StderrLine: {'line': b'  146 |  { \x1b[01;31m\x1b[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)\x1b[m\x1b[K; }\n'}
[1.115829] (sensor) StderrLine: {'line': b'      |    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.115873] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/mock.cpp:36:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KTemperaturePublisher::TemperaturePublisher(ISensor<sensor_msgs::msg::Temperature_<std::allocator<void> > >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.115919] (sensor) StderrLine: {'line': b'   36 |   \x1b[01;36m\x1b[KTemperaturePublisher\x1b[m\x1b[K(ISensor<sensor_msgs::msg::Temperature>::SharedPtr sensor)\n'}
[1.115972] (sensor) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.116018] (sensor) StderrLine: {'line': b'\x1b[01m\x1b[K/home/borisfor317/Workspace/mecaro/_interview/cpp-test-ros/sensor/src/mock.cpp:36:74:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kshared_ptr<\x1b[01;32m\x1b[KConstantSensor<sensor_msgs::msg::Temperature_<std::allocator<void> > >\x1b[m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kshared_ptr<\x1b[01;32m\x1b[KISensor<sensor_msgs::msg::Temperature_<std::allocator<void> > >\x1b[m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.116066] (sensor) StderrLine: {'line': b'   36 |   TemperaturePublisher(\x1b[01;36m\x1b[KISensor<sensor_msgs::msg::Temperature>::SharedPtr sensor\x1b[m\x1b[K)\n'}
[1.116110] (sensor) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[1.167987] (sensor) StderrLine: {'line': b'make[2]: *** [CMakeFiles/mock.dir/build.make:63: CMakeFiles/mock.dir/src/mock.cpp.o] Error 1\n'}
[1.168273] (sensor) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/mock.dir/all] Error 2\n'}
[1.168464] (sensor) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[1.169634] (sensor) CommandEnded: {'returncode': 2}
[1.198053] (sensor) JobEnded: {'identifier': 'sensor', 'rc': 2}
[1.202107] (-) TimerEvent: {}
[1.208655] (-) EventReactorShutdown: {}
